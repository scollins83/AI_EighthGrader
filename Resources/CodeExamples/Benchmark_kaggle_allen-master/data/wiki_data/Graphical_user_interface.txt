in computer science a graphical user interface or gui pronounced /ui/ ("gooey") is a type of interface that allows users to interact with electronic devices through graphical icons and visual indicators such as secondary notation as opposed to text-based interfaces typed command labels or text navigation guis were introduced in reaction to the perceived steep learning curve of command-line interfaces (clis) which require commands to be typed on the keyboard
the actions in a gui are usually performed through direct manipulation of the graphical elements in addition to computers guis can be found in hand-held devices such as mp3 players portable media players gaming devices smartphones and smaller household office and industrial equipment the term "gui" tends not to be applied to other low-resolution types of interfaces with display resolutions such as video games (where hud is preferred) or not restricted to flat screens like volumetric displays because the term is restricted to the scope of two-dimensional display screens able to describe generic information in the tradition of the computer science research at the parc (palo alto research center)
== user interface and interaction designedit ==
designing the visual composition and temporal behavior of a gui is an important part of software application programming in the area of human-computer interaction its goal is to enhance the efficiency and ease of use for the underlying logical design of a stored program a design discipline known as usability methods of user-centered design are used to ensure that the visual language introduced in the design is well tailored to the tasks
the visible graphical interface features of an application are sometimes referred to as "chrome" or "gui" (goo-ee) typically the user interacts with information by manipulating visual widgets that allow for interactions appropriate to the kind of data they hold the widgets of a well-designed interface are selected to support the actions necessary to achieve the goals of the user a model-view-controller allows for a flexible structure in which the interface is independent from and indirectly linked to application functionality so the gui can be easily customized this allows the user to select or design a different skin at will and eases the designer's work to change the interface as the user needs evolve good user interface design relates to the user not the system architecture
large widgets such as windows usually provide a frame or container for the main presentation content such as a web page email message or drawing smaller ones usually act as a user-input tool
a gui may be designed for the requirements of a vertical market as application-specific graphical user interfaces examples of application-specific guis include automated teller machines (atm) point-of-sale touchscreens at restaurants self-service checkouts used in a retail store airline self-ticketing and check-in information kiosks in a public space like a train station or a museum and monitors or control screens in an embedded industrial application which employ a real time operating system (rtos)
the latest cell phones and handheld game systems also employ application specific touchscreen guis newer automobiles use guis in their navigation systems and touch screen multimedia centers
=== examplesedit ===
sample graphical desktop environments
=== componentsedit ===
a gui uses a combination of technologies and devices to provide a platform that the user can interact with for the tasks of gathering and producing information
a series of elements conforming a visual language have evolved to represent information stored in computers this makes it easier for people with few computer skills to work with and use computer software the most common combination of such elements in guis is the wimp ("window icon menu pointing device") paradigm especially in personal computers
the wimp style of interaction uses a virtual input device to control the position of a pointer most often a mouse and presents information organized in windows and represented with icons available commands are compiled together in menus and actions are performed making gestures with the pointing device a window manager facilitates the interactions between windows applications and the windowing system the windowing system handles hardware devices such as pointing devices and graphics hardware as well as the positioning of the pointer
in personal computers all these elements are modeled through a desktop metaphor to produce a simulation called a desktop environment in which the display represents a desktop upon which documents and folders of documents can be placed window managers and other software combine to simulate the desktop environment with varying degrees of realism
=== post-wimp interfacesedit ===
smaller mobile devices such as pdas and smartphones typically use the wimp elements with different unifying metaphors due to constraints in space and available input devices applications for which wimp is not well suited may use newer interaction techniques collectively named as post-wimp user interfaces
as of 2011 some touchscreen-based operating systems such as apple's ios (iphone) and android use the class of guis named post-wimp these support styles of interaction using more than one finger in contact with a display which allows actions such as pinching and rotating which are unsupported by one pointer and mouse
=== interactionedit ===
human interface devices for the efficient interaction with a gui include a computer keyboard especially used in conjunction with keyboard shortcuts pointing devices for the cursor (or rather pointer) control: mouse pointing stick touchpad trackball joystick etc. virtual keyboards and head-up displays translucent information devices at the eye level
there are also actions performed by programs that affect the gui for example there are components like inotify or d-bus to facilitate the communication of computer programs with each other
== historyedit ==
=== precursorsedit ===
a precursor to guis was invented by researchers at the stanford research institute led by douglas engelbart they developed the use of text-based hyperlinks manipulated with a mouse for the on-line system (nls) the concept of hyperlinks was further refined and extended to graphics by researchers at xerox parc and specifically alan kay who went beyond text-based hyperlinks and used a gui as the primary interface for the xerox alto computer released in 1973 most modern general-purpose guis are derived from this system
ivan sutherland developed a pointer-based system called the sketchpad in 1963 it used a light-pen to guide the creation and manipulation of objects in engineering drawings
=== parc user interfaceedit ===
the parc user interface consisted of graphical elements such as windows menus radio buttons and check boxes the concept of icons was later introduced by david smith who had written a thesis on the subject under the guidance of kay the parc user interface employs a pointing device in addition to a keyboard these aspects can be emphasized by using the alternative acronym wimp which stands for windows icons menus and pointing device
=== evolutionedit ===
following parc the first gui-centric computer operating model was the xerox 8010 star information system in 1981 followed by the apple lisa (which presented the concept of menu bar as well as window controls) in 1983 the apple macintosh 128k in 1984 and the atari st and commodore amiga in 1985
visi on was released in 1983 for the ibm pc compatible computers but didn't became popular due to its high hardware demands nevertheless it was a crucial influence on the contemporary development of microsoft windows
apple ibm and microsoft used many of xerox's ideas to develop products and ibm's common user access specifications formed the basis of the user interface found in microsoft windows ibm os/2 presentation manager and the unix motif toolkit and window manager these ideas evolved to create the interface found in current versions of microsoft windows as well as in various desktop environments for unix-like operating systems such as mac os x and linux thus most current guis have largely common idioms
=== popularizationedit ===
guis were a hot topic in the early 1980s the apple lisa was released in 1983 and various windowing systems existed for ms-dos individual applications for a number of platforms presented their own take on the gui despite the guis advantages many reviewers questioned the value of the entire concept citing hardware limitations as well as the difficulty in finding compatible software
in 1984 apple released a television commercial which introduced the apple macintosh during the telecast of super bowl xviii by cbs with allusions to george orwell's noted novel nineteen eighty-four the commercial was aimed at making people think about computers identifying the user-friendly interface as a personal computer which departed from previous business-oriented systems and becoming a signature representation of apple products
accompanied by an extensive marketing campaign windows 95 was a major success in the marketplace at launch and shortly became the most popular desktop operating system
in 2007 with the iphone and later in 2010 with the introduction of the ipad apple popularized the post-wimp style of interaction for multi-touch screens and those devices were considered to be milestones in the development of mobile devices
the guis familiar to most people as of the mid-2010s are microsoft windows mac os x and the x window system interfaces for desktop and laptop computers and apple's ios android symbian blackberry os windows phone palm os / web os and firefox os for handheld ("smartphone") devices
== comparison to other interfacesedit ==
=== command-line interfacesedit ===
since the commands available in command line interfaces can be numerous complicated operations can be completed using a short sequence of words and symbols this allows for greater efficiency and productivity once many commands are learned but reaching this level takes some time because the command words may not be easily discoverable or mnemonic in addition using the command line can become slow and error-prone when the user needs to enter very long commands comprising many parameters and/or several different filenames at once wimps ("window icon menu pointing device") on the other hand present the user with numerous widgets that represent and can trigger some of the system's available commands
on the other hand guis can be made quite hard by burying dialogs deep in the system or moving dialogs from place to place also dialog boxes are considerably harder for the user to script
wimps extensively use modes as the meaning of all keys and clicks on specific positions on the screen are redefined all the time command line interfaces use modes only in limited forms such as the current directory and environment variables
most modern operating systems provide both a gui and some level of a cli although the guis usually receive more attention the gui is usually wimp-based although occasionally other metaphors surface such as those used in microsoft bob 3dwm or file system visualizer (fsv)
==== gui wrappersedit ====
graphical user interface (gui) wrappers circumvent the command-line interface versions (cli) of (typically) linux and unix-like software applications and their text-based interfaces or typed command labels while command-line or text-based application allow users to run the program non-interactively guis wrappers on top of them avoid the steep learning curve of the command-line which requires commands to be typed on the keyboard by starting a gui wrapper users can intuitively interact with polipo start stop and change its working parameters through graphical icons and visual indicators of a desktop environment for example applications may also provide both interfaces and when they do the gui is usually a wimp wrapper around the command-line version this is especially common with applications designed for unix-like operating systems the latter used to be implemented first because it allowed the developers to focus exclusively on their product's functionality without bothering about interface details such as designing icons and placing buttons designing programs this way also allows users to run the program in a shell script an example of this basic design could be the specialized polipo command-line web proxy server which has some connected gui wrapper projects e.g for windows os (solipo) mac os x (dolipo) and android (polipoid)
== three-dimensional user interfacesedit ==
for typical computer displays three-dimensional is a misnomertheir displays are two-dimensional semantically however most graphical user interfaces use three dimensions in addition to height and width they offer a third dimension of layering or stacking screen elements over one another this may be represented visually on screen through an illusionary transparent effect which offers the advantage that information in background windows may still be read if not interacted with or the environment may simply hide the background information possibly making the distinction apparent by drawing a drop shadow effect over it
some environments use the methods of 3d graphics to project virtual three dimensional user interface objects onto the screen these are often shown in use in sci-fi films (see below for examples) as the processing power of computer graphics hardware increases this becomes less of an obstacle to a smooth user experience
three-dimensional graphics are currently mostly used in computer games art and computer-aided design (cad) a three-dimensional computing environment could also be useful in other scenarios like molecular graphics and aircraft design
several attempts have been made to create a multi-user three-dimensional environment including the croquet project and sun's project looking glass
=== technologiesedit ===
the use of three-dimensional graphics has become increasingly common in mainstream operating systems from creating attractive interfaceseye candy to functional purposes only possible using three dimensions for example user switching is represented by rotating a cube whose faces are each user's workspace and window management is represented via a rolodex-style flipping mechanism in windows vista (see windows flip 3d) in both cases the operating system transforms windows on-the-fly while continuing to update the content of those windows
interfaces for the x window system have also implemented advanced three-dimensional user interfaces through compositing window managers such as beryl compiz and kwin using the aiglx or xgl architectures allowing for the usage of opengl to animate the user's interactions with the desktop
another branch in the three-dimensional desktop environment is the three-dimensional guis that take the desktop metaphor a step further like the bumptop where a user can manipulate documents and windows as if they were "real world" documents with realistic movement and physics
the zooming user interface (zui) is a related technology that promises to deliver the representation benefits of 3d environments without their usability drawbacks of orientation problems and hidden objects it is a logical advancement on the gui blending some three-dimensional movement with two-dimensional or "2.5d" vector objects in 2006 hillcrest labs introduced the first zooming user interface for television
=== in science fictionedit ===
three-dimensional guis appeared in science fiction literature and movies before they were technically feasible or in common use for example; the 1993 american film jurassic park features silicon graphics' three-dimensional file manager file system navigator a real-life file manager for unix operating systems the film minority report has scenes of police officers using specialized 3d data systems in prose fiction three-dimensional user interfaces have been displayed as immersible environments like william gibson's cyberspace or neal stephenson's metaverse many futuristic imaginings of user interfaces rely heavily on object-oriented user interface (ooui) style and especially object-oriented graphical user interface (oogui) style
== see alsoedit ==
== referencesedit ==
== external linksedit ==
evolution of graphical user interface in last 50 years by raj lal
the men who really invented the gui by clive akass
graphical user interface gallery screenshots of various guis
marcin wichary's guidebook graphical user interface gallery: over 5500 screenshots of gui application and icon history
the real history of the gui by mike tuck
in the beginning was the command line by neal stephenson
3d graphical user interfaces (pdf) by farid benhajji and erik dybner department of computer and systems sciences stockholm university
