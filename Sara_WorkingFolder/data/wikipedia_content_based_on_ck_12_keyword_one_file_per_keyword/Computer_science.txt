computer science is the scientific and practical approach to computation and its applications it is the systematic study of the feasibility structure expression and mechanization of the methodical procedures (or algorithms) that underlie the acquisition representation processing storage communication of and access to information an alternate more succinct definition of computer science is the study of automating algorithmic processes that scale a computer scientist specializes in the theory of computation and the design of computational systems
its fields can be divided into a variety of theoretical and practical disciplines some fields such as computational complexity theory (which explores the fundamental properties of computational and intractable problems) are highly abstract while fields such as computer graphics emphasize real-world visual applications still other fields focus on challenges in implementing computation for example programming language theory considers various approaches to the description of computation while the study of computer programming itself investigates various aspects of the use of programming language and complex systems humancomputer interaction considers the challenges in making computers and computations useful usable and universally accessible to humans
== history ==
the earliest foundations of what would become computer science predate the invention of the modern digital computer machines for calculating fixed numerical tasks such as the abacus have existed since antiquity aiding in computations such as multiplication and division further algorithms for performing computations have existed since antiquity even before the development of sophisticated computing equipment the ancient sanskrit treatise shulba sutras or "rules of the chord" is a book of algorithms written in 800 bc for constructing geometric objects like altars using a peg and chord an early precursor of the modern field of computational geometry
blaise pascal designed and constructed the first working mechanical calculator pascal's calculator in 1642 in 1673 gottfried leibniz demonstrated a digital mechanical calculator called the stepped reckoner he may be considered the first computer scientist and information theorist for among other reasons documenting the binary number system in 1820 thomas de colmar launched the mechanical calculator industry when he released his simplified arithmometer which was the first calculating machine strong enough and reliable enough to be used daily in an office environment charles babbage started the design of the first automatic mechanical calculator his difference engine in 1822 which eventually gave him the idea of the first programmable mechanical calculator his analytical engine he started developing this machine in 1834 and "in less than two years he had sketched out many of the salient features of the modern computer" "a crucial step was the adoption of a punched card system derived from the jacquard loom" making it infinitely programmable in 1843 during the translation of a french article on the analytical engine ada lovelace wrote in one of the many notes she included an algorithm to compute the bernoulli numbers which is considered to be the first computer program around 1885 herman hollerith invented the tabulator which used punched cards to process statistical information; eventually his company became part of ibm in 1937 one hundred years after babbage's impossible dream howard aiken convinced ibm which was making all kinds of punched card equipment and was also in the calculator business to develop his giant programmable calculator the ascc/harvard mark i based on babbage's analytical engine which itself used cards and a central computing unit when the machine was finished some hailed it as "babbage's dream come true"
during the 1940s as new and more powerful computing machines were developed the term computer came to refer to the machines rather than their human predecessors as it became clear that computers could be used for more than just mathematical calculations the field of computer science broadened to study computation in general computer science began to be established as a distinct academic discipline in the 1950s and early 1960s the world's first computer science degree program the cambridge diploma in computer science began at the university of cambridge computer laboratory in 1953 the first computer science degree program in the united states was formed at purdue university in 1962 since practical computers became available many applications of computing have become distinct areas of study in their own rights
although many initially believed it was impossible that computers themselves could actually be a scientific field of study in the late fifties it gradually became accepted among the greater academic population it is the now well-known ibm brand that formed part of the computer science revolution during this time ibm (short for international business machines) released the ibm 704 and later the ibm 709 computers which were widely used during the exploration period of such devices "still working with the ibm [computer] was frustrating [] if you had misplaced as much as one letter in one instruction the program would crash and you would have to start the whole process over again" during the late 1950s the computer science discipline was very much in its developmental stages and such issues were commonplace
time has seen significant improvements in the usability and effectiveness of computing technology modern society has seen a significant shift in the users of computer technology from usage only by experts and professionals to a near-ubiquitous user base initially computers were quite costly and some degree of human aid was needed for efficient usein part from professional computer operators as computer adoption became more widespread and affordable less human assistance was needed for common usage
=== contributions ===
despite its short history as a formal academic discipline computer science has made a number of fundamental contributions to science and societyin fact along with electronics it is a founding science of the current epoch of human history called the information age and a driver of the information revolution seen as the third major leap in human technological progress after the industrial revolution (17501850 ce) and the agricultural revolution (80005000 bc)
these contributions include:
the start of the "digital revolution" which includes the current information age and the internet
a formal definition of computation and computability and proof that there are computationally unsolvable and intractable problems
the concept of a programming language a tool for the precise expression of methodological information at various levels of abstraction
in cryptography breaking the enigma code was an important factor contributing to the allied victory in world war ii
scientific computing enabled practical evaluation of processes and situations of great complexity as well as experimentation entirely by software it also enabled advanced study of the mind and mapping of the human genome became possible with the human genome project distributed computing projects such as folding@home explore protein folding
algorithmic trading has increased the efficiency and liquidity of financial markets by using artificial intelligence machine learning and other statistical and numerical techniques on a large scale high frequency algorithmic trading can also exacerbate volatility
computer graphics and computer-generated imagery have become ubiquitous in modern entertainment particularly in television cinema advertising animation and video games even films that feature no explicit cgi are usually "filmed" now on digital cameras or edited or post-processed using a digital video editor
simulation of various processes including computational fluid dynamics physical electrical and electronic systems and circuits as well as societies and social situations (notably war games) along with their habitats among many others modern computers enable optimization of such designs as complete aircraft notable in electrical and electronic circuit design are spice as well as software for physical realization of new (or modified) designs the latter includes essential design software for integrated circuits
artificial intelligence is becoming increasingly important as it gets more efficient and complex there are many applications of ai some of which can be seen at home such as robotic vacuum cleaners it is also present in video games and on the modern battlefield in drones anti-missile systems and squad support robots
== philosophy ==
a number of computer scientists have argued for the distinction of three separate paradigms in computer science peter wegner argued that those paradigms are science technology and mathematics peter denning's working group argued that they are theory abstraction (modeling) and design amnon h eden described them as the "rationalist paradigm" (which treats computer science as a branch of mathematics which is prevalent in theoretical computer science and mainly employs deductive reasoning) the "technocratic paradigm" (which might be found in engineering approaches most prominently in software engineering) and the "scientific paradigm" (which approaches computer-related artifacts from the empirical perspective of natural sciences identifiable in some branches of artificial intelligence)
=== name of the field ===
although first proposed in 1956 the term "computer science" appears in a 1959 article in communications of the acm in which louis fein argues for the creation of a graduate school in computer sciences analogous to the creation of harvard business school in 1921 justifying the name by arguing that like management science the subject is applied and interdisciplinary in nature while having the characteristics typical of an academic discipline his efforts and those of others such as numerical analyst george forsythe were rewarded: universities went on to create such programs starting with purdue in 1962 despite its name a significant amount of computer science does not involve the study of computers themselves because of this several alternative names have been proposed certain departments of major universities prefer the term computing science to emphasize precisely that difference danish scientist peter naur suggested the term datalogy to reflect the fact that the scientific discipline revolves around data and data treatment while not necessarily involving computers the first scientific institution to use the term was the department of datalogy at the university of copenhagen founded in 1969 with peter naur being the first professor in datalogy the term is used mainly in the scandinavian countries an alternative term also proposed by naur is data science; this is now used for a distinct field of data analysis including statistics and databases
also in the early days of computing a number of terms for the practitioners of the field of computing were suggested in the communications of the acmturingineer turologist flow-charts-man applied meta-mathematician and applied epistemologist three months later in the same journal comptologist was suggested followed next year by hypologist the term computics has also been suggested in europe terms derived from contracted translations of the expression "automatic information" (e.g "informazione automatica" in italian) or "information and mathematics" are often used e.g informatique (french) informatik (german) informatica (italian dutch) informtica (spanish portuguese) informatika (slavic languages and hungarian) or pliroforiki ( which means informatics) in greek similar words have also been adopted in the uk (as in the school of informatics of the university of edinburgh)
a folkloric quotation often attributed tobut almost certainly not first formulated byedsger dijkstra states that "computer science is no more about computers than astronomy is about telescopes." the design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science for example the study of computer hardware is usually considered part of computer engineering while the study of commercial computer systems and their deployment is often called information technology or information systems however there has been much cross-fertilization of ideas between the various computer-related disciplines computer science research also often intersects other disciplines such as philosophy cognitive science linguistics mathematics physics biology statistics and logic
computer science is considered by some to have a much closer relationship with mathematics than many scientific disciplines with some observers saying that computing is a mathematical science early computer science was strongly influenced by the work of mathematicians such as kurt gdel and alan turing and there continues to be a useful interchange of ideas between the two fields in areas such as mathematical logic category theory domain theory and algebra
the relationship between computer science and software engineering is a contentious issue which is further muddied by disputes over what the term "software engineering" means and how computer science is defined david parnas taking a cue from the relationship between other engineering and science disciplines has claimed that the principal focus of computer science is studying the properties of computation in general while the principal focus of software engineering is the design of specific computations to achieve practical goals making the two separate but complementary disciplines
the academic political and funding aspects of computer science tend to depend on whether a department formed with a mathematical emphasis or with an engineering emphasis computer science departments with a mathematics emphasis and with a numerical orientation consider alignment with computational science both types of departments tend to make efforts to bridge the field educationally if not across all research
== areas of computer science ==
as a discipline computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software csab formerly called computing sciences accreditation boardwhich is made up of representatives of the association for computing machinery (acm) and the ieee computer society (ieee cs)identifies four areas that it considers crucial to the discipline of computer science: theory of computation algorithms and data structures programming methodology and languages and computer elements and architecture in addition to these four areas csab also identifies fields such as software engineering artificial intelligence computer networking and communication database systems parallel computation distributed computation humancomputer interaction computer graphics operating systems and numerical and symbolic computation as being important areas of computer science
=== theoretical computer science ===
the broader field of theoretical computer science encompasses both the classical theory of computation and a wide range of other topics that focus on the more abstract logical and mathematical aspects of computing
==== theory of computation ====
according to peter denning the fundamental question underlying computer science is "what can be (efficiently) automated?" theory of computation is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations in an effort to answer the first question computability theory examines which computational problems are solvable on various theoretical models of computation the second question is addressed by computational complexity theory which studies the time and space costs associated with different approaches to solving a multitude of computational problems
the famous p = np problem one of the millennium prize problems is an open problem in the theory of computation
==== information and coding theory ====
information theory is related to the quantification of information this was developed by claude shannon to find fundamental limits on signal processing operations such as compressing data and on reliably storing and communicating data coding theory is the study of the properties of codes (systems for converting information from one form to another) and their fitness for a specific application codes are used for data compression cryptography error detection and correction and more recently also for network coding codes are studied for the purpose of designing efficient and reliable data transmission methods
==== algorithms and data structures ====
algorithms and data structures is the study of commonly used computational methods and their computational efficiency
==== programming language theory ====
programming language theory is a branch of computer science that deals with the design implementation analysis characterization and classification of programming languages and their individual features it falls within the discipline of computer science both depending on and affecting mathematics software engineering and linguistics it is an active research area with numerous dedicated academic journals
==== formal methods ====
formal methods are a particular kind of mathematically based technique for the specification development and verification of software and hardware systems the use of formal methods for software and hardware design is motivated by the expectation that as in other engineering disciplines performing appropriate mathematical analysis can contribute to the reliability and robustness of a design they form an important theoretical underpinning for software engineering especially where safety or security is involved formal methods are a useful adjunct to software testing since they help avoid errors and can also give a framework for testing for industrial use tool support is required however the high cost of using formal methods means that they are usually only used in the development of high-integrity and life-critical systems where safety or security is of utmost importance formal methods are best described as the application of a fairly broad variety of theoretical computer science fundamentals in particular logic calculi formal languages automata theory and program semantics but also type systems and algebraic data types to problems in software and hardware specification and verification peter denning's working group argued that they are theory abstraction (modeling) and design.[27] amnon h eden described them as the "rationalist paradigm" (which treats computer science as a branch of mathematics which is prevalent in theoretical computer science and mainly employs deductive reasoning) the "technocratic paradigm" (which might be found in engineering approaches most prominently in software engineering) and the "scientific paradigm" (which approaches computer-related artifacts from the empirical perspective of natural sciences identifiable in some branches of artificial intelligence
=== applied computer science ===
applied computer science aims at identifying certain computer science concepts that can be used directly in solving real world problems
==== artificial intelligence ====
artificial intelligence (ai) aims to or is required to synthesise goal-orientated processes such as problem-solving decision-making environmental adaptation learning and communication found in humans and animals from its origins in cybernetics and in the dartmouth conference (1956) artificial intelligence research has been necessarily cross-disciplinary drawing on areas of expertise such as applied mathematics symbolic logic semiotics electrical engineering philosophy of mind neurophysiology and social intelligence ai is associated in the popular mind with robotic development but the main field of practical application has been as an embedded component in areas of software development which require computational understanding the starting-point in the late 1940s was alan turing's question "can computers think?" and the question remains effectively unanswered although the turing test is still used to assess computer output on the scale of human intelligence but the automation of evaluative and predictive tasks has been increasingly successful as a substitute for human monitoring and intervention in domains of computer application involving complex real-world data
==== computer architecture and engineering ====
computer architecture or digital computer organization is the conceptual design and fundamental operational structure of a computer system it focuses largely on the way by which the central processing unit performs internally and accesses addresses in memory the field often involves disciplines of computer engineering and electrical engineering selecting and interconnecting hardware components to create computers that meet functional performance and cost goals
==== computer performance analysis ====
computer performance analysis is the study of work flowing through computers with the general goals of improving throughput controlling response time using resources efficiently eliminating bottlenecks and predicting performance under anticipated peak loads
==== computer graphics and visualization ====
computer graphics is the study of digital visual contents and involves synthesis and manipulation of image data the study is connected to many other fields in computer science including computer vision image processing and computational geometry and is heavily applied in the fields of special effects and video games
==== computer security and cryptography ====
computer security is a branch of computer technology whose objective includes protection of information from unauthorized access disruption or modification while maintaining the accessibility and usability of the system for its intended users cryptography is the practice and study of hiding (encryption) and therefore deciphering (decryption) information modern cryptography is largely related to computer science for many encryption and decryption algorithms are based on their computational complexity
==== computational science ====
computational science (or scientific computing) is the field of study concerned with constructing mathematical models and quantitative analysis techniques and using computers to analyze and solve scientific problems in practical use it is typically the application of computer simulation and other forms of computation to problems in various scientific disciplines
==== computer networks ====
this branch of computer science aims to manage networks between computers worldwide
==== concurrent parallel and distributed systems ====
concurrency is a property of systems in which several computations are executing simultaneously and potentially interacting with each other a number of mathematical models have been developed for general concurrent computation including petri nets process calculi and the parallel random access machine model a distributed system extends the idea of concurrency onto multiple computers connected through a network computers within the same distributed system have their own private memory and information is often exchanged among themselves to achieve a common goal
==== databases ====
a database is intended to organize store and retrieve large amounts of data easily digital databases are managed using database management systems to store create maintain and search data through database models and query languages
==== software engineering ====
software engineering is the study of designing implementing and modifying software in order to ensure it is of high quality affordable maintainable and fast to build it is a systematic approach to software design involving the application of engineering practices to software software engineering deals with the organizing and analyzing of softwareit doesn't just deal with the creation or manufacture of new software but its internal maintenance and arrangement both computer applications software engineers and computer systems software engineers are projected to be among the fastest growing occupations from 2008 to 2018
== the great insights of computer science ==
the philosopher of computing bill rapaport noted three great insights of computer science:
gottfried wilhelm leibniz's george boole's alan turing's claude shannon's and samuel morse's insight: there are only two objects that a computer has to deal with in order to represent "anything"
all the information about any computable problem can be represented using only 0 and 1 (or any other bistable pair that can flip-flop between two easily distinguishable states such as "on/off" "magnetized/de-magnetized" "high-voltage/low-voltage" etc.)
alan turing's insight: there are only five actions that a computer has to perform in order to do "anything"
every algorithm can be expressed in a language for a computer consisting of only five basic instructions:
move left one location;
move right one location;
read symbol at current location;
print 0 at current location;
print 1 at current location
corrado bhm and giuseppe jacopini's insight: there are only three ways of combining these actions (into more complex ones) that are needed in order for a computer to do "anything"
only three rules are needed to combine any set of basic instructions into more complex ones:
sequence: first do this then do that;
selection: if such-and-such is the case then do this else do that;
repetition: while such-and-such is the case do this
note that the three rules of boehm's and jacopini's insight can be further simplified with the use of goto (which means it is more elementary than structured programming)
== academia ==
conferences are important events for computer science research during these conferences researchers from the public and private sectors present their recent work and meet unlike in most other academic fields in computer science the prestige of conference papers is greater than that of journal publications one proposed explanation for this is the quick development of this relatively new field requires rapid review and distribution of results a task better handled by conferences than by journals
== education ==
since computer science is a relatively new field it is not as widely taught in schools and universities as other academic subjects for example in 2014 code.org estimated that only 10 percent of high schools in the united states offered computer science education a 2010 report by association for computing machinery (acm) and computer science teachers association (csta) revealed that only 14 out of 50 states have adopted significant education standards for high school computer science however computer science education is growing some countries such as israel new zealand and south korea have already included computer science in their respective national secondary education curriculum several countries are following suit
in most countries there is a significant gender gap in computer science education for example in the us about 20% of computer science degrees in 2012 were conferred to women this gender gap also exists in other western countries however in some parts of the world the gap is small or nonexistent in 2011 approximately half of all computer science degrees in malaysia were conferred to women in 2001 women made up 54.5% of computer science graduates in guyana
== see also ==
== notes ==
== references ==
== further reading ==
== external links ==
computer science at dmoz
scholarly societies in computer science
best papers awards in computer science since 1996
photographs of computer scientists by bertrand meyer
eecs.berkeley.edu
bibliography and academic search engines
citeseerx (article): search engine digital library and repository for scientific and academic papers with a focus on computer and information science
dblp computer science bibliography (article): computer science bibliography website hosted at universitt trier in germany
the collection of computer science bibliographies (article)
professional organizations
association for computing machinery
ieee computer society
informatics europe
aaai
aaas computer science
misc
computer sciencestack exchange: a community-run question-and-answer site for computer science
what is computer science
is computer science science
software researchers practising bad science by relying on untested/unproven flawed concepts/definitions
